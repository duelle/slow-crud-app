// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jclarity.auth.controller;

import com.jclarity.auth.controller.ApplicationConversionServiceFactoryBean;
import com.jclarity.auth.domain.WebUser;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<WebUser, String> ApplicationConversionServiceFactoryBean.getWebUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.jclarity.auth.domain.WebUser, java.lang.String>() {
            public String convert(WebUser webUser) {
                return new StringBuilder().append(webUser.getPassword()).append(' ').append(webUser.getUsername()).toString();
            }
        };
    }
    
    public Converter<Long, WebUser> ApplicationConversionServiceFactoryBean.getIdToWebUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.jclarity.auth.domain.WebUser>() {
            public com.jclarity.auth.domain.WebUser convert(java.lang.Long id) {
                return WebUser.findWebUser(id);
            }
        };
    }
    
    public Converter<String, WebUser> ApplicationConversionServiceFactoryBean.getStringToWebUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.jclarity.auth.domain.WebUser>() {
            public com.jclarity.auth.domain.WebUser convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), WebUser.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getWebUserToStringConverter());
        registry.addConverter(getIdToWebUserConverter());
        registry.addConverter(getStringToWebUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
