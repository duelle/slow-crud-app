// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.jclarity.auth.domain;

import com.jclarity.auth.domain.WebUser;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect WebUser_Roo_Finder {
    
    public static TypedQuery<WebUser> WebUser.findWebUsersByUsernameEquals(String username) {
        if (username == null || username.length() == 0) throw new IllegalArgumentException("The username argument is required");
        EntityManager em = WebUser.entityManager();
        TypedQuery<WebUser> q = em.createQuery("SELECT o FROM WebUser AS o WHERE o.username = :username", WebUser.class);
        q.setParameter("username", username);
        return q;
    }
    
    public static TypedQuery<WebUser> WebUser.findWebUsersByUsernameEqualsAndPasswordEquals(String username, String password) {
        if (username == null || username.length() == 0) throw new IllegalArgumentException("The username argument is required");
        if (password == null || password.length() == 0) throw new IllegalArgumentException("The password argument is required");
        EntityManager em = WebUser.entityManager();
        TypedQuery<WebUser> q = em.createQuery("SELECT o FROM WebUser AS o WHERE o.username = :username  AND o.password = :password", WebUser.class);
        q.setParameter("username", username);
        q.setParameter("password", password);
        return q;
    }
    
}
